MANIFEST for td_lib, version t19900515
--------------------------------------------------------------------------------
MANIFEST                        this file
Makefile                        top-level makefile for TD_LIB
README                          read-me file for this directory
descrip.mms                     top-level MMS script for this library on VMS
certify                         subdirectory
certify/reusable.txt            summary of reusable components
include                         subdirectory
include/Makefile                make-file for CM_TOOLS common interface directory
include/acl.h                   defines ACL bits for apollo SR10.1
include/cmdch.h                 
include/llib-ltd                template for lint-library
include/port2vms.h              interface for vms-porting functions
include/ptypes.h                principal include-file for TD_LIB
include/rcsdefs.h               interface for rcs functions
include/sccsdefs.h              interface for sccs functions
include/td_lib.h                interface of common TD_LIB functions
include/vms_dirs.h              VMS unix-style directory-interface definitions
src                             subdirectory
src/Makefile                    makefile for td_lib/src
src/cm_funcs                    subdirectory
src/cm_funcs/cutoff.c           SCCS-style cutoff date parsing
src/cm_funcs/newzone.c          set new timezone
src/cm_funcs/packdate.c         pack numbers to make UNIX date
src/cm_funcs/rcs_dir.c          returns name of RCS-directory
src/cm_funcs/rcsdebug.c         encapsulates $RCS_DEBUG variable
src/cm_funcs/rcsedit.c          edit RCS archive-file
src/cm_funcs/rcskeys.c          decode RCS keywords
src/cm_funcs/rcslast.c          scan for last RCS date & version
src/cm_funcs/rcsload.c          load delta-tree for an RCS file
src/cm_funcs/rcslocks.c         RCS lock-parsing
src/cm_funcs/rcsname.c          derive RCS working/archive filenames
src/cm_funcs/rcspath.c          RCS utility to pathname
src/cm_funcs/rcsperm.c          directory-level RCS permissions
src/cm_funcs/rcstemp.c          create temp-file for setuid operations
src/cm_funcs/sccs_dir.c         returns name of SCCS directory
src/cm_funcs/sccslast.c         scan for last SCCS date & version
src/cm_funcs/sccsname.c         SCCS working/archive name translation (like 'rcsname.c').
src/cm_funcs/vcs_file.c         encapsulates name of directory-level RCS permissions file
src/cm_funcs/vercmp.c           compare version-strings
src/curses                      subdirectory
src/curses/beep.c               sound audible alarm
src/curses/blip.c               write 1 character to screen, bypassing curses
src/curses/cmdch.c              command-character decoder
src/curses/dumpchr.c            dump screen character to file
src/curses/dumpwin.c            dump curses window to file
src/curses/erasechr.c           returns erase-char value
src/curses/killchar.c           returns kill-char value
src/curses/padedit.c            opens an edit-pad (or xterm) on a file
src/curses/rawgets.c            read a string via curses in raw mode (allow edits)
src/curses/rawterm.c            set terminal to raw (cooked) mode
src/curses/resizwin.c           change size of curses window
src/curses/savewin.c            save/unsave curses window
src/curses/scr_size.c           obtain screen-size
src/curses/viewfile.c           portable (curses) wrapper for padedit
src/curses/win2file.c           dump curses window to file
src/curses/wrepaint.c           repaint window w/o clearing it, if possible
src                             subdirectory
src/descrip.mms                 VMS build script for td_lib/src
src/memory                      subdirectory
src/memory/doalloc.c            wrapper for malloc/realloc/free (checks pointers)
src/memory/stralloc.c           portable replacement for 'strdup()'
src/memory/txtalloc.c           maintain dictionary of string "constants"
src/memory/vecalloc.c           allocate an array
src/pathname                    subdirectory
src/pathname/abspath.c          convert path to absolute form
src/pathname/add2fnam.c         add suffix to a filename
src/pathname/arg2file.c         write an argv-style (null-terminated vector of pointers to strings) to a file
src/pathname/copyback.c         copy file back from a temp-file
src/pathname/denode.c           strip leading node-name from path
src/pathname/dlettree.c         delete-tree code for VMS/unix
src/pathname/dotname.c          test for "." or ".." names
src/pathname/editfile.c         VMS/unix edit tree-of-files
src/pathname/edittree.c         VMS/unix edit-tree-of-files
src/pathname/file2arg.c         load a text-file to memory in 'argv[]' format, returning the number of lines
src/pathname/file2mem.c         code from 'file2argv.c' which loads a file to blob-string in memory
src/pathname/filecopy.c         copy a file
src/pathname/fp2argv.c          file-pointer to argv-list
src/pathname/ftype.c            finds filename's suffix
src/pathname/ftype2.c           finds filename's suffix (style 2)
src/pathname/istextfl.c         tests a file to see if it is normal text vs binary
src/pathname/mem2file.c         write a blob-string from memory to a file
src/pathname/modechar.c         translate file-mode (binary) to character
src/pathname/name2s.c           convert filename to printable string
src/pathname/pathcat.c          concatenate directory & filename
src/pathname/pathcmp.c          compare pathnames, for sorting
src/pathname/pathhead.c         obtain parent directory-name from path
src/pathname/pathleaf.c         obtain basename (leaf) from pathname
src/pathname/relpath.c          converts absolute-pathname to relative
src/pathname/sameleaf.c         compare ends of pathnames
src/pathname/track_wd.c         tracks working directory for baseline, rcsput, rcsget utilities
src/pathname/trimpath.c         trim excess punctuation from a standard unix-style pathname (cf: abspath)
src/pathname/trnstree.c         translate (producing new output-files) tree-of-files
src/pathname/walktree.c         walk directory-tree, performing function
src/pathname/which.c            locate file in $PATH
src/port2vms                    subdirectory
src/port2vms/dir2path.c         VMS directory/pathname conversion
src/port2vms/name2vms.c         convert unix filename to VMS format
src/port2vms/path2dir.c         convert VMS pathname to directory
src/port2vms/path2vms.c         convert unix pathname (directory!) to VMS format
src/port2vms/rmsio.c            VMS equivalent to system-level (open, close, read, write) unix I/O
src/port2vms/time2vms.c         convert unix time to VMS format
src/port2vms/uid2s.c            convert VMS uid/gid to string (cf: code in CM_TOOLS)
src/port2vms/utimes.c           VMS hack to provide unix-compatible 'utimes()' function.
src/port2vms/vms2name.c         convert VMS filename to unix format
src/port2vms/vms_dirs.c         VMS hack to provide unix-style directory access
src/port2vms/vms_wild.c         tests a filename for vms-wildcards
src/port2vms/zone2vms.c         compute timezone adjustment for VMS/unix time conversion
src/process                     subdirectory
src/process/bldarg.c            build argc+argv array from string
src/process/catarg.c            concatenate argument (cf: bldarg)
src/process/catchall.c          catch all signals
src/process/execute.c           portable 'system()' call
src/process/failed.c            fatal-error exit, normally in main-program
src/process/for_user.c          carry out function for set-uid user
src/process/gethome.c           get $HOME path
src/process/getopt.c            'getopt()', for systems that don't have it
src/process/getuser.c           get user name
src/process/makeargv.c          make quick (nonstandard) argv-list list from a string
src/process/revert.c            reset/disable setuid mode
src/process/usercopy.c          copy file for set-uid user
src/process/userprot.c          set file protection for set-uid user
src/string                      subdirectory
src/string/dftenv.c             returns 'getenv()' with a default (non-null) value
src/string/dotcmp.c             compare dot-separated strings
src/string/lsbycols.c           list an array of character strings by columns
src/string/ltostr.c             convert 'long' to a string
src/string/strbcmp.c            compare two strings ignoring blanks a la "diff -b"
src/string/strclean.c           "clean" string, removes unnecessary blanks
src/string/strtrim.c            trim trailing whitespace from a string
src/string/strucmp.c            compare two strings ignoring case
src/string/strucpy.c            copy string, uppercasing it
src/string/strwcmp.c            wildcard string-comparator
src/unix                        subdirectory
src/unix/gid2s.c                convert group-id to string
src/unix/s2gid.c                convert string to group-id
src/unix/s2uid.c                convert string to user-id
src/unix/setmtime.c             set mtime/atime of a file
src/unix/uid2s.c                convert user-id to string
support                         subdirectory
support/lib_top.mms             same as STANDARD_RULES, save that we generate lib-directory, rather than bin
support/linkopts.opt            default link-options file for PORTUNIX
support/prog_top.mms            VMS MMS include-file defining standard (module-level) rules.
support/td_lib.mms              VMS MMS include-file defining PORTUNIX library-rules
support/td_progs.mms            VMS MMS include-file defining program-generation rules above PORTUNIX
test/port2vms                   subdirectory
test/port2vms/README            description of test/port2vms
