/* @(#)llib-ltd	1.47 88/09/19 07:36:58 */
/*LINTLIBRARY*/

#define	CUR_PTYPES
#include	"ptypes.h"
#include	"rcsdefs.h"

/* MAIN-PROGRAM ******************************************************* */
	failed(s) char *s; { }		/* fatal-error exit */

/* GENERIC-LIBRARY **************************************************** */

/* abspath.c ---------------------------------------------------------- */
	abspath(path) char *path; { }

/* beep.c ------------------------------------------------------------- */
	beep() { }

/* bldarg.c ----------------------------------------------------------- */
	bldarg (argc, argv, string) char *argv[], *string; { }

/* blip.c ------------------------------------------------------------- */
	blip(c) { }

/* catarg.c ----------------------------------------------------------- */
	catarg (dst, src) char *dst, *src; { }

/* catchall.c --------------------------------------------------------- */
	catchall (func) int (*func)(); { }

/* cmdch.c ------------------------------------------------------------ */
int	cmdch(cntp) int *cntp; { return(0); }

/* copyback.c --------------------------------------------------------- */
int	copyback(fp, name, mode, lines) FILE *fp; char *name; { return(0); }

/* cutoff.c ----------------------------------------------------------- */
time_t	cutoff(argc, argv) char *argv[]; { return(0); }

/* denode.c ----------------------------------------------------------- */
char	*denode (path, node, opt) char *path, *node; int *opt; { return(0); }

/* doalloc.c ---------------------------------------------------------- */
char	*doalloc(oldp,len) char *oldp; unsigned len; { return(0); }
	dofree(oldp) char *oldp; { }

/* dotcmp.c ----------------------------------------------------------- */
int	dotcmp (s1,s2) char *s1,*s2; { return(0); }

/* dotname.c ---------------------------------------------------------- */
int	dotname (path) char *path; { return(0); }

/* dumpchr.c ---------------------------------------------------------- */
	dumpchr(fp,c) FILE *fp; { }

/* dumpwin.c ---------------------------------------------------------- */
	dumpwin(w,s) WINDOW *w; char *s; { }

/* erasechar.c -------------------------------------------------------- */
#ifdef	erasechar
#undef	erasechar
#endif	erasechar
char	erasechar() { return(0); }

/* execute.c ---------------------------------------------------------- */
int	execute(verb, args) char *verb, *args; { return(0); }

/* filecopy.c --------------------------------------------------------- */
int	filecopy(src, dst, copy) char *src, *dst; { return(0); }

/* for_user.c --------------------------------------------------------- */
int	for_user(func) int (*func)(); { return(0); }

/* fp2argv.c ---------------------------------------------------------- */
int	fp2argv(fp, argv_) FILE *fp; char ***argv_; { return(0); }

/* ftype.c ------------------------------------------------------------ */
char	*ftype(path) char *path; { return(0); }

/* ftype2.c ------------------------------------------------------------ */
char	*ftype2(path) char *path; { return(0); }

/* gethome.c ---------------------------------------------------------- */
char	*gethome() { return(0); }

/* getuser.c ---------------------------------------------------------- */
char	*getuser() { return(0); }

/* gid2s.c ------------------------------------------------------------ */
char	*gid2s(gid) { return(0); }

/* killchar.c --------------------------------------------------------- */
#ifdef	killchar
#undef	killchar
#endif	killchar
char	killchar() { return(0); }

/* ltostr.c ----------------------------------------------------------- */
char	*ltostr(bfr, value, base) char *bfr; long value; { return(0); }

/* modechar.c --------------------------------------------------------- */
int	modechar(mode) unsigned mode; { return(0); }

/* name2s.c ----------------------------------------------------------- */
int	name2s(bfr, maxbfr, name, opt) char *bfr, *name; { return(0); }

/* newzone.c ---------------------------------------------------------- */
int	localzone;
	newzone(hours, minutes, apres) { }
	oldzone() { }

/* packdate.c --------------------------------------------------------- */
long	packdate (year, mon, day, hour, min, s) { return (0); }

/* padedit.c ---------------------------------------------------------- */
int	padedit(name, readonly, editor) char *name, *editor; { return(0); }

/* pathcat.c ---------------------------------------------------------- */
char *	pathcat(dst, p, n) char *dst, *p, *n; { return(0); }

/* pathhead.c --------------------------------------------------------- */
char *	pathhead(path, s) char *path; struct stat *s; { return(0); }

/* pathleaf.c --------------------------------------------------------- */
char *	pathleaf(path) char *path; { return(0); }

/* rawgets.c ---------------------------------------------------------- */
	rawgets (bfr,size,newline) char	*bfr; { }

/* rawterm.c ---------------------------------------------------------- */
	rawterm() { }

/* rcs_dir.c --------------------------------------------------------- */
char *	rcs_dir() { return(0); }

/* rcsedit.c --------------------------------------------------------- */
int	rcsopen(name, show) char *name; { return (0); }
char *	rcsread(s) char *s; { return(0); }
	rcsedit (where, old, new) char *where, *old, *new; { }
	rcsclose() { }
char *	rcsparse_num(d, s) char *d, *s; { return (0); }
char *	rcsparse_id(d, s) char *d, *s; { return (0); }
char *	rcsparse_str(s,f) char *s; int (*f)(); { return (0); }

/* rcskeys.c --------------------------------------------------------- */
int	rcskeys(s) char *s; { return(0); }

/* rcslast.c --------------------------------------------------------- */
	rcslast(wd,n,v_,t_,l_) char *wd,*n; char **v_, **l_; time_t *t_; { }

/* rcsload.c --------------------------------------------------------- */
RCSTREE *rcsload(name,verbose) char *name; { return(0); }
	rcsunload(p) RCSTREE *p; { }

/* rcslocks.c -------------------------------------------------------- */
char *	rcslocks(s, who, rev) char *s, *who, *rev; { return(0); }

/* rcsname.c ---------------------------------------------------------- */
char *	rcs2name(name) char *name; { return(0); }
char *	name2rcs(name) char *name; { return(0); }

/* rcspath.c ---------------------------------------------------------- */
char *	rcspath(name) char *name; { return(0); }

/* rcstemp.c ---------------------------------------------------------- */
char *	rcstemp(name,copy) char *name; { return(0); }

/* resizewin.c -------------------------------------------------------- */
int	resizewin() { return(0); }

/* s2gid.c ------------------------------------------------------------ */
int	s2gid(s) char	*s; { return (0); }

/* s2uid.c ------------------------------------------------------------ */
int	s2uid(s) char	*s; { return (0); }

/* sameleaf.c --------------------------------------------------------- */
int	sameleaf(path,leaf) char *path, *leaf; { return(0); }

/* savewin.c ---------------------------------------------------------- */
	savewin() { }
	lastwin(redo,top) { }
	unsavewin(redo,top) { }

/* sccs_dir.c --------------------------------------------------------- */
char *	sccs_dir() { return(0); }

/* sccslast.c --------------------------------------------------------- */
	sccslast(wd,n,v_,t_,l_) char *wd,*n; char **v_, **l_; time_t *t_; { }

/* scr_size.c --------------------------------------------------------- */
int	scr_size(lc) int *lc; { return(0); }

/* setmtime.c --------------------------------------------------------- */
int	setmtime(name, mtime) char *name; time_t mtime; { return(0); }

/* stralloc.c --------------------------------------------------------- */
char	*stralloc(string) char *string; { return(0); }
	strfree(string) char *string; { }

/* strclean.c --------------------------------------------------------- */
int	strclean(string) char *string; { return(0); }

/* txtalloc.c --------------------------------------------------------- */
char	*txtalloc(string) char *string; { return(0); }
	txtfree(string) char *string; { }

/* uid2s.c ------------------------------------------------------------ */
char	*uid2s(uid) { return(0); }

/* usercopy.c --------------------------------------------------------- */
int	usercopy(s, d) char *s, *d; { return(0); }

/* userprot.c --------------------------------------------------------- */
int	userprot(name, mode, mtime) char *name; time_t mtime; { return(0); }

/* vecalloc.c --------------------------------------------------------- */
char	**vecalloc(len) unsigned len; { return(0); }
	vecfree(v) char **v; { }

/* walktree.c --------------------------------------------------------- */
int	walktree(p, n, f, m, lvl) char *p, *n, *m; int (*f)(); { return(0); }

/* which.c ------------------------------------------------------------ */
int	which(bfr, len, find, dot) char	*bfr, *find, *dot; { return(0); }

/* win2file.c --------------------------------------------------------- */
	win2file(win, file) WINDOW *win; char *file; { }
