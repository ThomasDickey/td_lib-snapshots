dnl Process this file with 'autoconf' to produce a 'configure' script
dnl $Id: configure.in,v 12.62 1995/10/14 15:14:36 tom Exp $
AC_REVISION($Revision: 12.62 $)
AC_INIT(include/td_lib.h)

td_CFLAGS="$CFLAGS"

###	get special options
AC_ARG_ENABLE(debug,
[  --enable-debug          turn on debug (-g) (for testing/porting)],
[WithDebug=$enableval], [WithDebug=no])
AC_ARG_ENABLE(warnings,
[  --enable-warnings       turn on GCC warnings (for testing/porting)],
[WithWarnings=$enableval], [WithWarnings=no])
AC_ARG_WITH(prototypes,
[  --with-prototypes       turn on all prototypes (for testing only)],
[WithPrototypes=$withval], [WithPrototypes=no])
AC_ARG_WITH(ncurses,
[  --with-ncurses          check for ncurses (a SysVr4 curses clone)],
[WithNcurses=$withval],  [WithNcurses=no])

###	program paths
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
TD_RCS_SCCS
AC_PROGRAM_PATH(MAKE,make,make)
AC_PROGRAM_PATH(RANLIB,ranlib,echo)
AC_CHECK_PROG(OnHost, uname, [`uname -a`])
AC_CHECK_PROGS(LINT, tdlint lint alint, [echo lint not available])

AC_C_CROSS
AC_SYS_LONG_FILE_NAMES

###	undo the -g option of CFLAGS unless we've enabled it
if test -z "$td_CFLAGS"; then
	if test "$WithDebug" = "no"; then
		CFLAGS=`echo $CFLAGS|sed -e s/-g//`
	fi
fi

###	extra things that we'll substitute in the makefile
AC_SUBST(CC_OPTS)
AC_SUBST(INCLUDES)
AC_SUBST(MAKE)
AC_SUBST(RANLIB)
TD_MAKEFLAGS

###	use option -with-warnings to turn on all gcc warnings
CC_OPTS="$CFLAGS"
if test -n "$GCC"; then
	if test "$WithWarnings" = yes; then
		CC_OPTS="$CC_OPTS -Wall -Wshadow -Wconversion -Wstrict-prototypes -Wmissing-prototypes"
	else
		CC_OPTS="-O"
	fi
fi

AC_CONST
AC_STDC_HEADERS
AC_HEADER_DIRENT
AC_MAJOR_HEADER
AC_RETSIGTYPE
TD_SIG_ARGS
TD_ANSI_CPP
TD_STAT_ST_BLOCKS

AC_HAVE_HEADERS(time.h sys/time.h)
AC_HEADER_TIME

AC_HAVE_HEADERS(stdlib.h unistd.h limits.h string.h memory.h grp.h pwd.h)
AC_HAVE_HEADERS(stdarg.h varargs.h)
AC_HAVE_HEADERS(file.h fcntl.h ioctl.h)
dnl don't combine <file.h> and <sys/file.h>, because autoconf gets confused
AC_HAVE_HEADERS(sys/file.h sys/fcntl.h sys/ioctl.h sys/param.h)
AC_HAVE_HEADERS(termcap.h termios.h termio.h sgtty.h utime.h)

AC_CHECK_LIB(bsd, bcopy)
TD_CURSES_LIBS
TD_REGEX

### DataTypes
AC_CHECK_TYPE(dev_t, unsigned short)
AC_CHECK_TYPE(ino_t, unsigned short)
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_UID_T
AC_TYPE_GETGROUPS
AC_VFORK
TD_WAIT
TD_SIZE_T
TD_CURSES_DATA

### DataItems/Structs
TD_SYS_ERRLIST
TD_GMTOFF

# We're done looking for libraries and header files.  Find the functions and
# datatypes

dnl Functions (use TD_HAVE_FUNCS for debugging, AC_HAVE_FUNCS for quick config)
if test $WithWarnings = yes; then
TD_HAVE_FUNCS(
_exit \
_filbuf \
_flsbuf \
calloc \
closedir \
creat \
exit \
fclose \
fflush \
fgetc \
fprintf \
fputc \
fputs \
fread \
free \
fscanf \
fseek \
fwrite \
getenv \
getgid \
getuid \
ioctl \
malloc \
open \
opendir \
pclose \
perror \
popen \
printf \
puts \
readdir \
readlink \
realloc \
rename \
rewind \
rewinddir \
seekdir \
sprintf \
sscanf \
strtok \
strtol \
symlink \
system \
telldir \
time \
ungetc \
)
fi

# Functions whose return type is important, or whose existence must be known
# to drive ifdefs.
AC_FUNC_LSTAT
TD_CURSES_FUNCS(addchnstr beep cbreak erasechar killchar ungetch wresize)
TD_CURSES_MOUSE
TD_HAVE_FUNCS(
bzero \
endgrent \
endpwent \
execvp \
fork \
getcwd \
getegid \
geteuid \
getgrent \
getgrgid \
getgrnam \
getgroups \
getopt \
getpwent \
getpwnam \
getpwuid \
gettimeofday \
getwd \
has_colors \
intrflush \
is_xterm \
keypad \
memmove \
mkstemp \
mktemp \
putenv \
resizeterm \
setbuf \
setegid \
setgrent \
setlinebuf \
setpwent \
setrgid \
setruid \
setvbuf \
strchr \
strerror \
strrchr \
tcgetattr \
tgetent \
tgetnum \
tolower \
toupper \
typeahead \
utime \
vfork \
wait \
)

### Program locations
TD_PROGRAM_FULLPATH(DEFAULT_EDITOR, $EDITOR vi)
TD_PROGRAM_FULLPATH(DEFAULT_BROWSE, $BROWSE view)
TD_PROGRAM_FULLPATH(DEFAULT_PAGER, $PAGER more less most)

###	output config.h
#
#	This bypasses the normal autoconf process because we're generating an
#	arbitrary number of NEED_xxxx definitions with the TD_HAVE_FUNCS macro. 
#	Rather than populate an aclocal.h file with all of those definitions,
#	we do it here.
#
###
changequote({,})dnl
AC_OUTPUT(td_make config_h,
{
if ( cmp -s td_make support/td_lib.mk 2>/dev/null )
then
	echo "support/td_lib.mk is unchanged"
	rm -f td_make
else
	echo creating support/td_lib.mk
	rm -f support/td_lib.mk
	mv td_make support/td_lib.mk
fi

rm -f config.h
echo '/* generated by configure-script */' >config.h
grep -v '^ -D' config_h >>config.h
sed	-e '/^ -D/!d' \
	-e '/^# /d' \
	-e 's/ -D/\
#define /g' \
	-e 's/\(#define [A-Za-z_][A-Za-z0-9_]*\)=/\1	/g' \
	-e 's@\\@@g' \
	config_h | sort >>config.h
if ( cmp -s config.h include/config.h 2>/dev/null )
then
	echo "include/config.h is unchanged"
	rm -f config.h
else
	echo "creating include/config.h"
	rm -f include/config.h
	mv config.h include/
fi
touch stamp-h
}
)
changequote([,])dnl
