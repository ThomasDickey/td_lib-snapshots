# $Id: td_make.in,v 12.3 1994/07/10 20:38:22 tom Exp $
# common definitions for makefiles built over TD_LIB library.

####### (Environment) ##########################################################
TD_LIB	= td_lib
# TOP	= ../../.. -- must define

B	= ../bin
I	= $(TOP)/$(TD_LIB)/include
L	= $(TOP)/$(TD_LIB)/lib

RM	= rm -f
GET	= checkout
COPY	= cp -p
PUT	= $(RM) $@; $(COPY) $? $@

MAKE	= @MAKE@ $(MFLAGS) -k$(MAKEFLAGS) CFLAGS="$(CFLAGS)" COPY="$(COPY)"

CC		= @CC@
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@
RANLIB		= @RANLIB@

CFLAGS		= @CC_OPTS@
#LINK		= purify $(CC)
LINK		= $(CC)

INSTALL_BIN	= $(TOP)/install_bin
INSTALL_LIB	= $(TOP)/install_lib
INSTALL_MAN	= $(TOP)/install_man

####### (Command-line Options) #################################################
INCLUDES	= -I. -I$I @INCLUDES@
DEFINES		= -DHAVE_CONFIG_H
CPP_OPTS	= $(DEFINES) $(INCLUDES)

LIB_DEPS	= $L/$(TD_LIB).a
LIB_ARGS	= $L/$(TD_LIB).a @LIBS@
DATE		= echo '** '`date` >> $@

LINTLIBS	= -ltd @LIBS@
LINTOPTS	= $(CPP_OPTS) -DNO_IDENT $(LINTLIBS)

####### (Standard Lists) #######################################################
# don't put .a into CLEAN, because VERDIX-ADA uses that for source!
CLEAN	= *.[oi] *.lint *.bak *.log *.out *.tst .nfs* *.pure* core tags
DESTROY	=sh -c 'for i in *;do case $$i in RCS);; *) $(RM) $$i;;esac;done;exit 0'
RUN_TESTS=sh -c '$@.sh 2>&1 | tee -a $@.out'

PTYPES_H =	$I/ptypes.h	$I/td_ext.h	$I/td_lib.h	$I/config.h
CURSES_H =	$(PTYPES_H)	$I/td_curse.h
QSORT_H =	$(PTYPES_H)	$I/td_qsort.h
RCSDEFS_H =	$(PTYPES_H)	$I/rcsdefs.h	$I/deltree.h
SCCSDEFS_H =	$(PTYPES_H)	$I/sccsdefs.h

####### (Development) ##########################################################
CPROTO	= cproto -e -i -fo'\\n\\t\\t' -fp'\\n\\t\\t'

LINT_EACH = sh -c 'for i in $?;do echo $$i:; tdlint $(LINTOPTS) $$i >>$@;done'

#.SUFFIXES:
.SUFFIXES: .c .o .a

.c.o:		; $(CC) $(CPP_OPTS) $(CFLAGS) -c $<
.c.a:
	@echo compile $<
	@$(CC) $(CFLAGS) $(CPP_OPTS) -c $*.c
	@ar rv $@ $*.o
	-@$(RM) $*.o

.SUFFIXES: .i .proto .lint .tst

.c.i:		; $(CC) $(CPP_OPTS) -E -C $< >$@
.c.proto:	; $(CPROTO) $(CPP_OPTS) $< >$@
.c.lint:	; tdlint $(LINTOPTS) $< >$@

.c.tst:		; $(CC) -o $@ -DTEST $(CFLAGS) $(CPP_OPTS) $< $Z $(LIB_ARGS)

.SUFFIXES: .man .cat

.man.cat:
	-$(RM) $@
	nroff -man $? >$@
