# $Id: td_make.in,v 12.30 2012/09/04 08:39:42 tom Exp $
# common definitions for makefiles built over TD_LIB library.
# vile:makemode

SHELL	= /bin/sh
@SET_MAKE@

####### (Environment) ##########################################################
prefix		= @prefix@
exec_prefix	= @exec_prefix@

bindir		= @bindir@
libdir		= @libdir@
datarootdir	= @datarootdir@
mandir		= @mandir@
datadir		= @datadir@

TD_LIB		= @TOP_SRCDIR@/lib
TD_INC		= @TOP_SRCDIR@/include

AR		= ar crv
RM		= rm -f
LINT		= @LINT@
CTAGS		= @CTAGS@
ETAGS		= @ETAGS@

CC		= @CC@
CPP		= @CPP@
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@
RANLIB		= @RANLIB@
MAKE_OPTS	= @cf_cv_makeflags@

EXTRA_CFLAGS	= @EXTRA_CFLAGS@
CFLAGS		= @CFLAGS@
LINK		= $(CC) $(CFLAGS)

INSTALL_BIN	= $(DESTDIR)$(bindir)
INSTALL_INC	= $(DESTDIR)$(includedir)
INSTALL_LIB	= $(DESTDIR)$(libdir)
INSTALL_MAN	= $(DESTDIR)$(mandir)

####### (Command-line Options) #################################################
EXTRA_CPPFLAGS	= @EXTRA_CPPFLAGS@
CPPFLAGS	= @CPPFLAGS@
CPP_CONFIG	= -I. -I$(TD_INC) -DHAVE_CONFIG_H $(CPPFLAGS) $(EXTRA_CPPFLAGS)
CPP_OPTS	= $(CPP_CONFIG) $(EXTRA_CPP_OPTS)

x		= @PROG_EXT@
LIB_DEPS	= $(TD_LIB)/@LIB_PREFIX@td.a
LIB_ARGS	= @LDFLAGS@ -L$(TD_LIB) -ltd @LIBS@

CURSES_LIBS	= @LDFLAGS@ -L$(TD_LIB) -ltd @CURSES_LIBS@ @LIBS@

DATE		= echo '** '`date` >> $@

LINTLIBS	= -ltd @LIBS@
LINTOPTS	= $(CPP_OPTS) -DNO_IDENT $(LINTLIBS)

####### (Standard Lists) #######################################################
# don't put .a into CLEAN, because VERDIX-ADA uses that for source!
CLEAN	= *.[oi] *.lint *.bak *.log *.out *.tst .nfs* *.pure* core tags
DESTROY	=$(SHELL) -c 'for i in *;do case $$i in RCS);; *) $(RM) $$i;;esac;done;exit 0'
RUN_TESTS=$(SHELL) -c './run_test.sh 2>&1 | tee -a $@.out'

PTYPES_H =	$(TD_INC)/ptypes.h \
		$(TD_INC)/td_ext.h \
		$(TD_INC)/td_lib.h \
		$(TD_INC)/td_config.h
CURSES_H =	$(PTYPES_H) \
		$(TD_INC)/td_curse.h
QSORT_H =	$(PTYPES_H) \
		$(TD_INC)/td_qsort.h
RCSDEFS_H =	$(PTYPES_H) \
		$(TD_INC)/rcsdefs.h \
		$(TD_INC)/deltree.h
SCCSDEFS_H =	$(PTYPES_H) \
		$(TD_INC)/sccsdefs.h

####### (Development) ##########################################################
CPROTO	= cproto -e -i -fo'\\n\\t\\t' -fp'\\n\\t\\t'

LINT_EACH = $(SHELL) -c 'for i in $?;do echo $$i:; $(LINT) $(LINTOPTS) $$i >>$@;done'

#.SUFFIXES:
.SUFFIXES: .c .o .a

.c.o:
	@RULE_CC@
	@ECHO_CC@$(CC) $(CPP_OPTS) $(CFLAGS) $(EXTRA_CFLAGS) -c $<
.o.a:
	@$(AR) $@ $*.o
	-@$(RM) $*.o
.c.a:
	@RULE_CC@
	@ECHO_CC@$(CC) $(CPP_OPTS) $(CFLAGS) $(EXTRA_CFLAGS) -c $<
	@$(AR) $@ $*.o
	-@$(RM) $*.o

.SUFFIXES: .i .proto .lint .tst

.c.i:		; $(CC) $(CPP_OPTS) -E -C $< >$@
.c.proto:	; $(CPROTO) $(CPP_OPTS) $< >$@
.c.lint:	; $(LINT) $(LINTOPTS) $< >$@

.c.tst:
	@ECHO_LD@$(CC) -o $@ -DTEST $(CFLAGS) $(EXTRA_CFLAGS) $(CPP_OPTS) $< $Z $(LIB_ARGS)

CLEAN__MAN = @USE_NROFF@ .cat @USE_GROFF@ .pdf .ps .html .png .txt 

@USE_NROFF@.SUFFIXES: .man .cat @USE_GROFF@ .pdf .ps .html .txt 
@USE_NROFF@
@USE_NROFF@NROFF	= @NROFF_PATH@
@USE_NROFF@
@USE_NROFF@.man.cat:
@USE_NROFF@	-$(RM) $@
@USE_NROFF@	$(NROFF) -man $? >$@

@USE_GROFF@GROFF	= @GROFF_PATH@
@USE_GROFF@
@USE_GROFF@.man.html :
@USE_GROFF@	GROFF_NO_SGR=stupid $(SHELL) -c "tbl $*.man | $(GROFF) -Thtml -man" >$@
@USE_GROFF@
@USE_GROFF@.man.ps :
@USE_GROFF@	$(SHELL) -c "tbl $*.man | $(GROFF) -man" >$@
@USE_GROFF@
@USE_GROFF@.man.txt :
@USE_GROFF@	GROFF_NO_SGR=stupid $(SHELL) -c "tbl $*.man | $(GROFF) -Tascii -man | col -bx" >$@
@USE_GROFF@
@USE_GROFF@.ps.pdf :
@USE_GROFF@	ps2pdf $*.ps
