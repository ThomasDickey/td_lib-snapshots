".type" => ".TYPE;"
"name.type" => "NAME.TYPE;"
"name.type.junk" => "NAME.TYPE$JUNK;"
"x/.type" => "[.X].TYPE;"
"x/y" => "[.X]Y.;"
"x/y/z" => "[.X.Y]Z.;"
"/x" => "X:"
"/x/y" => "X:[Y]"
"/x/y/" => "X:[Y]"
"/x.y" => "X.Y:"
"x.y.z" => "X.Y$Z;"
"x.y.1" => "X.Y;1"
"x.y.1x" => "X.Y$1X;"
"x.y" => "X.Y;"
"s.x" => "S$X.;"
"s.x.y" => "S$X.Y;"
"s." => "S.;"
"x." => "X.;"
"HOME" => "{HOME}"
"HOME/x" => "{HOME}X.;"
"HOME/x/y" => "{HOME}[.X]Y.;"
"BOOCH_LIB_ROOT" => "BOOCH_LIB_ROOT.;"
"BOOCH_LIB/ada" => "[.BOOCH_LIB]ADA.;"
"BOOCH_LIB_ROOT/ada" => "[.BOOCH_LIB_ROOT]ADA.;"
"BOOCH_LIB_ROOT/adalib/" => "[.BOOCH_LIB_ROOT.ADALIB]"
"BOOCH_LIB_ROOT/ada/x" => "[.BOOCH_LIB_ROOT.ADA]X.;"
"SYS$DISK" => "SYS$DISK.;"
"SYS$DISK/x" => "[.SYS$DISK]X.;"
"SYS$DISK/x/y" => "[.SYS$DISK.X]Y.;"
"x;y" => "X$Y.;"
"node!" => "NODE::"
"node!/dev" => "NODE::DEV:"
"node!/dev/file" => "NODE::DEV:[FILE]"
"REPOS" => "REPOS.;"
"REPOS/x" => "[.REPOS]X.;"
